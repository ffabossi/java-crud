package iagocolodetti.javadbexemplo.view;

import iagocolodetti.javadbexemplo.dao.Contato;
import iagocolodetti.javadbexemplo.dao.ContatoDAOImpl;
import iagocolodetti.javadbexemplo.exception.ContatoNaoExisteException;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author iagocolodetti
 */
public class MainGUI extends javax.swing.JFrame {

    private final DefaultTableModel model;
    
    private void msgBoxSucesso(String mensagem) {
        JOptionPane.showMessageDialog(rootPane, mensagem, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
    }
    
    private void msgBoxErro(String mensagem) {
        JOptionPane.showMessageDialog(rootPane, mensagem, "Erro", JOptionPane.ERROR_MESSAGE);
    }
    
    private void adicionarLinhaTabela(int id, String nome, String telefone, String email) {
        model.addRow(new Object[]{id, nome, telefone, email});
        tbContatos.changeSelection(tbContatos.getRowCount() - 1, 0, false, false);
    }
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
        
        model = (DefaultTableModel) tbContatos.getModel();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfTelefone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfEmail = new javax.swing.JTextField();
        btAdicionar = new javax.swing.JButton();
        btAtualizar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        tfBuscar = new javax.swing.JTextField();
        cbBuscarPor = new javax.swing.JComboBox<>();
        btBuscar = new javax.swing.JButton();
        btBuscarTodos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbContatos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaDBExemplo");
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("mainGUI"); // NOI18N
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("JavaDBExemplo");

        jPanel1.setBackground(new java.awt.Color(235, 235, 235));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contato", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 16))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("ID (usado para atualizar/excluir):");

        tfID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Nome:");

        tfNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Telefone:");

        tfTelefone.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("E-mail:");

        tfEmail.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btAdicionar.setBackground(new java.awt.Color(204, 255, 204));
        btAdicionar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btAdicionar.setText("Adicionar");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        btAtualizar.setBackground(new java.awt.Color(153, 255, 255));
        btAtualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btAtualizar.setText("Atualizar");
        btAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarActionPerformed(evt);
            }
        });

        btExcluir.setBackground(new java.awt.Color(255, 51, 51));
        btExcluir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(tfID)
                        .addComponent(tfTelefone)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tfEmail)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfNome, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionar)
                    .addComponent(btAtualizar)
                    .addComponent(btExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Buscar:");

        tfBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        cbBuscarPor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbBuscarPor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Por ID", "Por Nome", "Por Telefone", "Por E-mail" }));

        btBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btBuscarTodos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btBuscarTodos.setText("Buscar Todos");
        btBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarTodosActionPerformed(evt);
            }
        });

        tbContatos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tbContatos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbContatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Telefone", "E-mail"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbContatos.setRowHeight(24);
        tbContatos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbContatos.getTableHeader().setReorderingAllowed(false);
        tbContatos.getTableHeader().setFont(new java.awt.Font("Tahoma", 0, 14));
        tbContatos.setShowGrid(true);
        jScrollPane1.getViewport().setBackground(java.awt.Color.WHITE);
        jScrollPane1.setViewportView(tbContatos);
        if (tbContatos.getColumnModel().getColumnCount() > 0) {
            tbContatos.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbContatos.getColumnModel().getColumn(1).setPreferredWidth(280);
            tbContatos.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbContatos.getColumnModel().getColumn(3).setPreferredWidth(280);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbBuscarPor, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(245, 245, 245)
                        .addComponent(btBuscarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btBuscar)
                    .addComponent(cbBuscarPor)
                    .addComponent(tfBuscar)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addComponent(btBuscarTodos)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        // TODO add your handling code here:
        if (!tfNome.getText().isEmpty()) {
            if (!tfTelefone.getText().isEmpty()) {
                if (!tfEmail.getText().isEmpty()) {
                    try {
                        Contato contato = new Contato(tfNome.getText(), tfTelefone.getText(), tfEmail.getText());
                        new ContatoDAOImpl().add(contato);
                        msgBoxSucesso("Contato adicionado.");
                    } catch (SQLException e) {
                        msgBoxErro(e.getMessage());
                    }
                } else {
                    msgBoxErro("Campo e-mail está vazio.");
                }
            } else {
                msgBoxErro("Campo telefone está vazio.");
            }
        } else {
            msgBoxErro("Campo nome está vazio.");
        }
    }//GEN-LAST:event_btAdicionarActionPerformed

    private void btAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarActionPerformed
        // TODO add your handling code here:
        if (!tfID.getText().isEmpty()) {
            if (!tfNome.getText().isEmpty()) {
                if (!tfTelefone.getText().isEmpty()) {
                    if (!tfEmail.getText().isEmpty()) {
                        try {
                            int id = Integer.parseInt(tfID.getText());
                            Contato contato = new Contato(id, tfNome.getText(), tfTelefone.getText(), tfEmail.getText());
                            new ContatoDAOImpl().update(contato);
                            msgBoxSucesso("Contato atualizado.");
                        } catch (NumberFormatException e) {
                            msgBoxErro("Campo id deve ser um número inteiro.");
                        } catch (ContatoNaoExisteException | SQLException e) {
                            msgBoxErro(e.getMessage());
                        }
                    } else {
                        msgBoxErro("Campo e-mail está vazio.");
                    }
                } else {
                    msgBoxErro("Campo telefone está vazio.");
                }
            } else {
                msgBoxErro("Campo nome está vazio.");
            }
        } else {
            msgBoxErro("Campo id está vazio.");
        }
    }//GEN-LAST:event_btAtualizarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // TODO add your handling code here:
        if (!tfID.getText().isEmpty()) {
            try {
                int id = Integer.parseInt(tfID.getText());
                new ContatoDAOImpl().delete(id);
                msgBoxSucesso("Contato excluído.");
            } catch (NumberFormatException e) {
                msgBoxErro("Campo id deve ser um número inteiro.");
            } catch (ContatoNaoExisteException | SQLException e) {
                msgBoxErro(e.getMessage());
            }
        } else {
            msgBoxErro("Campo id está vazio.");
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        // TODO add your handling code here:
        if (!tfBuscar.getText().isEmpty()) {
            List<Contato> contatos;
            try {
                switch (cbBuscarPor.getSelectedIndex()) {
                    case 0: // ID
                        try {
                            int id = Integer.parseInt(tfBuscar.getText());
                            Contato contato = new ContatoDAOImpl().getContato(id);
                            model.setRowCount(0);
                            adicionarLinhaTabela(contato.getId(), contato.getNome(), contato.getTelefone(), contato.getEmail());
                        } catch (NumberFormatException e) {
                            msgBoxErro("Para buscar por ID, é necessário entrar com um número inteiro.");
                        }
                        break;
                    case 1: // Nome
                        contatos = new ContatoDAOImpl().getContatosPorNome(tfBuscar.getText());
                        model.setRowCount(0);
                        for (Contato contato : contatos) {
                            adicionarLinhaTabela(contato.getId(), contato.getNome(), contato.getTelefone(), contato.getEmail());
                        }
                        break;
                    case 2: // Telefone
                        contatos = new ContatoDAOImpl().getContatosPorTelefone(tfBuscar.getText());
                        model.setRowCount(0);
                        for (Contato contato : contatos) {
                            adicionarLinhaTabela(contato.getId(), contato.getNome(), contato.getTelefone(), contato.getEmail());
                        }
                        break;
                    case 3: // E-mail
                        contatos = new ContatoDAOImpl().getContatosPorEmail(tfBuscar.getText());
                        model.setRowCount(0);
                        for (Contato contato : contatos) {
                            adicionarLinhaTabela(contato.getId(), contato.getNome(), contato.getTelefone(), contato.getEmail());
                        }
                        break;
                    default:
                        msgBoxErro("Selecione pelo o que deseja buscar.");
                }
            } catch (ContatoNaoExisteException | SQLException e) {
                msgBoxErro(e.getMessage());
            }
        } else {
            msgBoxErro("Campo buscar está vazio.");
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarTodosActionPerformed
        // TODO add your handling code here:
        try {
            List<Contato> contatos = new ContatoDAOImpl().getContatos();
            model.setRowCount(0);
            for (Contato contato : contatos) {
                adicionarLinhaTabela(contato.getId(), contato.getNome(), contato.getTelefone(), contato.getEmail());
            }
        } catch (ContatoNaoExisteException | SQLException e) {
            msgBoxErro(e.getMessage());
        }
    }//GEN-LAST:event_btBuscarTodosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainGUI mainGUI = new MainGUI();
                // Cor do Frame
                mainGUI.getContentPane().setBackground(new Color(235, 235, 235));
                // Resolução do Frame
                mainGUI.setSize(800, 600);
                // Centralizar Frame
                mainGUI.setLocation(
                        (Toolkit.getDefaultToolkit().getScreenSize().width - mainGUI.getWidth()) / 2,
                        (Toolkit.getDefaultToolkit().getScreenSize().height - mainGUI.getHeight()) / 2);
                // Exibir Frame
                mainGUI.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAtualizar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btBuscarTodos;
    private javax.swing.JButton btExcluir;
    private javax.swing.JComboBox<String> cbBuscarPor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbContatos;
    private javax.swing.JTextField tfBuscar;
    private javax.swing.JTextField tfEmail;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfTelefone;
    // End of variables declaration//GEN-END:variables
}
